{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","allSelectedGood","goods","selectGood","good","setState","removeGoods","removeGood","filter","item","this","className","length","type","onClick","map","classNames","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQWC,EAAb,4MACEC,MAAQ,CACNC,gBAAiB,CAAC,OAClBC,MAAOJ,GAHX,EAMEK,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBC,gBAAgB,GAAD,mBAAMD,EAAMC,iBAAZ,CAA6BG,SARlD,EAYEE,YAAc,WACZ,EAAKD,SAAS,CAAEJ,gBAAiB,MAbrC,EAgBEM,WAAa,SAACH,GACZ,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBC,gBAAiBD,EAAMC,gBAAgBO,QAAO,SAAAC,GAAI,OAAIA,IAASL,UAlBrE,4CAsBE,WAAU,IAAD,OACP,EAAmCM,KAAKV,MAAhCC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,MAEzB,OACE,sBAAKS,UAAU,MAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,aAAd,SAC+B,IAA3BV,EAAgBW,OAAjB,UACMX,EADN,gBAEG,sBAEuB,IAA3BA,EAAgBW,QAChB,wBACED,UAAU,cACVE,KAAK,SACLC,QAASJ,KAAKJ,YAHhB,kBAUJ,6BACGJ,EAAMa,KAAI,SAAAX,GAAI,OACb,sBAAKO,UAAU,cAAf,UACE,oBACEA,UAAWK,IAAW,cAAe,CACnC,wBAAyB,EAAKhB,MAAMC,gBAAgBgB,SAASb,KAFjE,SAKGA,IAEF,EAAKJ,MAAMC,gBAAgBgB,SAASb,GAEjC,wBACES,KAAK,SACLF,UAAU,gBACVG,QAAS,kBAAM,EAAKP,WAAWH,IAHjC,oBASA,wBACES,KAAK,SACLF,UAAU,gBACVG,QAAS,kBAAM,EAAKX,WAAWC,IAHjC,gCAjElB,GAAyBc,IAAMC,WAiFhBpB,ICpGfqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f7216632.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  allSelectedGood: string[];\n  goods: string[];\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    allSelectedGood: ['Jam'],\n    goods: goodsFromServer,\n  };\n\n  selectGood = (good: string) => {\n    this.setState((state) => ({\n      allSelectedGood: [...state.allSelectedGood, good],\n    }));\n  };\n\n  removeGoods = () => {\n    this.setState({ allSelectedGood: [] });\n  };\n\n  removeGood = (good: string) => {\n    this.setState((state) => ({\n      allSelectedGood: state.allSelectedGood.filter(item => item !== good),\n    }));\n  };\n\n  render() {\n    const { allSelectedGood, goods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__selectBlock\">\n          <h1 className=\"App__title\">\n            {(allSelectedGood.length !== 0)\n              ? `${allSelectedGood} is selected`\n              : 'No goods selected'}\n          </h1>\n          {(allSelectedGood.length !== 0) && (\n            <button\n              className=\"App__button\"\n              type=\"button\"\n              onClick={this.removeGoods}\n            >\n              X\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {goods.map(good => (\n            <div className=\"goods__list\">\n              <li\n                className={classNames('goods__item', {\n                  'goods__item--selected': this.state.allSelectedGood.includes(good),\n                })}\n              >\n                {good}\n              </li>\n              {this.state.allSelectedGood.includes(good)\n                ? (\n                  <button\n                    type=\"button\"\n                    className=\"goods__button\"\n                    onClick={() => this.removeGood(good)}\n                  >\n                    Remove\n                  </button>\n                )\n                : (\n                  <button\n                    type=\"button\"\n                    className=\"goods__button\"\n                    onClick={() => this.selectGood(good)}\n                  >\n                    Add\n                  </button>\n                )}\n            </div>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App1 from './App';\n\nReactDOM.render(\n  <App1 />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}